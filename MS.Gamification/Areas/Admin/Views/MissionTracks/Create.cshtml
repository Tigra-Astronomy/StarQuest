@model MS.Gamification.Areas.Admin.ViewModels.MissionTracks.MissionTrackViewModel

@{
    ViewBag.Title = "Create";
}

<h2>Create</h2>


@using (Html.BeginForm())
    {
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>MissionTrack</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Number, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Number, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Number, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.AwardTitle, new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.AwardTitle, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.AwardTitle, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.MissionLevelId, "MissionLevelId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.MissionLevelId, Model.LevelPicker, new { @class = "form-control" })
                @*@Html.DropDownList("MissionLevelId", (SelectList)ViewBag.MissionLevelPicker, htmlAttributes: new { @class = "form-control" })*@
                @Html.ValidationMessageFor(model => model.MissionLevelId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.BadgeId, "BadgeId", new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownListFor(model => model.BadgeId, Model.BadgePicker, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.BadgeId, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            <div id="badgeDropzone" class="dropzone col-md-offset-2 col-md-4">
            </div>
            <div class="col-md-6">
                <p>
                    Select an existing badge in the drop-down above. To upload a new badge,
                    drop it in the box, or click in the box to browse for a file.
                </p>
                <p>
                    Badge images should be encoded as PNG, JPG or GIF and ideally sized to 240x240 pixels.
                </p>
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-default" />
            </div>
        </div>
    </div>
    }

<div>
    @Html.ActionLink("Back to List", "Index")
</div>


@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    @Scripts.Render("~/bundles/dropzone")
    <script>
        Dropzone.options.badgeDropzone = {
            url: "@Url.Action("Upload", "Badges", new {area = "Admin"})",
            maxFileSize: 0.5, // Mb
            maxFiles: 1,
            acceptedFiles: ".png,.gif,.jpg,.bmp",
            init: function() {
                this.on("maxfilesexceeded",
                    function(file) {
                        this.removeFile(file);
                    });
                this.on("success",
                    function(file, response) {
                        var option = $("<option>",
                            {
                                value: response.badgeId,
                                text: response.imageIdentifier,
                                selected: true
                            });
                        $("#BadgeId")
                            .append(option);
                    });
            }
        };
    </script>

}
@section styles
{
    @Styles.Render("~/Content/dropzone")
}